services:
  api:
    build: ./HighloadCourse
    container_name: highload_course_api
    environment:
      - ConnectionStrings__ReadWrite=Server=highload_course_db_1;User Id=${DB_USER};Password=${DB_PASSWORD};Database=highload_course
      - ConnectionStrings__ReadOnly=Server=highload_course_db_2;User Id=${DB_USER};Password=${DB_PASSWORD};Database=highload_course
      - AuthenticationKey=${AUTH_KEY}
    ports:
      - "5001:8080"
    networks:
      - db_network
  db_1:
    image: postgres
    container_name: highload_course_db_1
    hostname: highload_course_db_1
    environment:
      - POSTGRES_DB=highload_course
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "15432:5432"
    volumes:
      - ~/postgresql/highload_course_db_1:/var/lib/postgresql/data
      - ./../Scripts/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./../Scripts/initialize_data.sh:/usr/scripts/initialize_data.sh
      - ./../Scripts/initialize_data.sql:/usr/scripts/initialize_data.sql
      - ./../Scripts/data.csv:/usr/scripts/data.csv
    networks:
      - db_network
  db_2:
    image: postgres
    container_name: highload_course_db_2
    hostname: highload_course_db_2
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "25432:5432"
    volumes:
      - ~/postgresql/highload_course_db_2:/var/lib/postgresql/data
    networks:
      - db_network
    depends_on:
      - db_1
  db_3:
    image: postgres
    container_name: highload_course_db_3
    hostname: highload_course_db_3
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "35432:5432"
    volumes:
      - ~/postgresql/highload_course_db_3:/var/lib/postgresql/data
    networks:
      - db_network
    depends_on:
      - db_1

networks:
  db_network:
    name: db_network
    driver: bridge
